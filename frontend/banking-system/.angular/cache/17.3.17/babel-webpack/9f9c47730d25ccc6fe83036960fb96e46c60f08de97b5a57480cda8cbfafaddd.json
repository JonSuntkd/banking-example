{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * HTTP implementation of TransactionRepository\n */\nexport class TransactionHttpRepository {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8003/transaction';\n  }\n  createTransaction(transaction) {\n    return this.http.post(this.baseUrl, transaction);\n  }\n  getAllTransactions() {\n    return this.http.get(this.baseUrl);\n  }\n  getTransactionById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateTransaction(id, transaction) {\n    return this.http.put(`${this.baseUrl}/${id}`, transaction);\n  }\n  deleteTransaction(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  getTransactionReport(date) {\n    return this.http.get(`${this.baseUrl}/report?date=${encodeURIComponent(date)}`);\n  }\n  static {\n    this.ɵfac = function TransactionHttpRepository_Factory(t) {\n      return new (t || TransactionHttpRepository)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TransactionHttpRepository,\n      factory: TransactionHttpRepository.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TransactionHttpRepository","constructor","http","baseUrl","createTransaction","transaction","post","getAllTransactions","get","getTransactionById","id","updateTransaction","put","deleteTransaction","delete","getTransactionReport","date","encodeURIComponent","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\familia\\Documents\\gitpro\\banking-example\\frontend\\banking-system\\src\\app\\infrastructure\\http\\transaction-http.repository.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TransactionRepository } from '@domain/repositories/transaction.repository';\r\nimport { Transaction, TransactionCreateDto, TransactionUpdateDto, TransactionReportDto } from '@domain/entities/transaction.entity';\r\n\r\n/**\r\n * HTTP implementation of TransactionRepository\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionHttpRepository implements TransactionRepository {\r\n  private readonly baseUrl = 'http://localhost:8003/transaction';\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  createTransaction(transaction: TransactionCreateDto): Observable<Transaction> {\r\n    return this.http.post<Transaction>(this.baseUrl, transaction);\r\n  }\r\n\r\n  getAllTransactions(): Observable<Transaction[]> {\r\n    return this.http.get<Transaction[]>(this.baseUrl);\r\n  }\r\n\r\n  getTransactionById(id: number): Observable<Transaction> {\r\n    return this.http.get<Transaction>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  updateTransaction(id: number, transaction: TransactionUpdateDto): Observable<Transaction> {\r\n    return this.http.put<Transaction>(`${this.baseUrl}/${id}`, transaction);\r\n  }\r\n\r\n  deleteTransaction(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  getTransactionReport(date: string): Observable<TransactionReportDto[]> {\r\n    return this.http.get<TransactionReportDto[]>(`${this.baseUrl}/report?date=${encodeURIComponent(date)}`);\r\n  }\r\n}"],"mappings":";;AAMA;;;AAMA,OAAM,MAAOA,yBAAyB;EAGpCC,YAA6BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,mCAAmC;EAEd;EAEhDC,iBAAiBA,CAACC,WAAiC;IACjD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAc,IAAI,CAACH,OAAO,EAAEE,WAAW,CAAC;EAC/D;EAEAE,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAgB,IAAI,CAACL,OAAO,CAAC;EACnD;EAEAM,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAc,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC5D;EAEAC,iBAAiBA,CAACD,EAAU,EAAEL,WAAiC;IAC7D,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAc,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEL,WAAW,CAAC;EACzE;EAEAQ,iBAAiBA,CAACH,EAAU;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;EAEAK,oBAAoBA,CAACC,IAAY;IAC/B,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAyB,GAAG,IAAI,CAACL,OAAO,gBAAgBc,kBAAkB,CAACD,IAAI,CAAC,EAAE,CAAC;EACzG;;;uBA3BWhB,yBAAyB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAzBrB,yBAAyB;MAAAsB,OAAA,EAAzBtB,yBAAyB,CAAAuB,IAAA;MAAAC,UAAA,EAFxB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\familia\\\\Documents\\\\gitpro\\\\banking-example\\\\frontend\\\\banking-system\\\\src\\\\presentation\\\\views\\\\TransactionReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/Views.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionReport = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [clientName, setClientName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reportData, setReportData] = useState([]);\n  const [pdfBase64, setPdfBase64] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const handleGenerateReport = async () => {\n    if (!startDate || !endDate || !clientName.trim()) {\n      setError('Por favor complete todos los campos: fecha de inicio, fecha de fin y nombre del cliente');\n      return;\n    }\n    if (new Date(startDate) > new Date(endDate)) {\n      setError('La fecha de inicio no puede ser mayor que la fecha de fin');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setShowResults(false);\n      const reportUrl = `/transaction/reports-report?startDate=${startDate}&endDate=${endDate}&clientName=${encodeURIComponent(clientName)}`;\n      console.log('Haciendo petici√≥n a:', reportUrl);\n      console.log('Par√°metros:', {\n        startDate,\n        endDate,\n        clientName\n      });\n      const response = await axios.get(reportUrl);\n      console.log('Respuesta recibida:', response.data);\n      if (response.data && response.data.reportData && response.data.reportData.length > 0) {\n        setReportData(response.data.reportData);\n        setPdfBase64(response.data.pdfBase64);\n        setShowResults(true);\n        setError('‚úÖ Reporte generado exitosamente');\n      } else {\n        setReportData([]);\n        setPdfBase64('');\n        setShowResults(false);\n        setError('‚ùå No se encontraron movimientos para el cliente y fechas especificadas');\n      }\n    } catch (error) {\n      console.error('Error generating report:', error);\n      setReportData([]);\n      setPdfBase64('');\n      setShowResults(false);\n      if (axios.isAxiosError(error)) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n          setError('‚ùå No se encontraron movimientos para el cliente y fechas especificadas');\n        } else if (error.response && error.response.status >= 500) {\n          setError('‚ùå Error del servidor. Por favor, intente m√°s tarde');\n        } else {\n          setError('‚ùå Error al generar el reporte. Verifique que el servicio est√© disponible');\n        }\n      } else {\n        setError('‚ùå Error inesperado al generar el reporte');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPDF = () => {\n    if (!pdfBase64) {\n      setError('‚ùå No hay PDF disponible para descargar');\n      return;\n    }\n    try {\n      console.log('Base64 original length:', pdfBase64.length);\n      console.log('Base64 primeros 50 caracteres:', pdfBase64.substring(0, 50));\n\n      // Limpiar el base64 - remover posibles prefijos y espacios\n      let cleanBase64 = pdfBase64.trim();\n\n      // Remover prefijo data:application/pdf;base64, si existe\n      if (cleanBase64.startsWith('data:application/pdf;base64,')) {\n        cleanBase64 = cleanBase64.substring('data:application/pdf;base64,'.length);\n      }\n\n      // Validar que sea base64 v√°lido\n      if (!/^[A-Za-z0-9+/]*={0,2}$/.test(cleanBase64)) {\n        throw new Error('Formato base64 inv√°lido');\n      }\n      console.log('Base64 limpio length:', cleanBase64.length);\n\n      // Convertir base64 a binary\n      const byteCharacters = atob(cleanBase64);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      console.log('Tama√±o del array de bytes:', byteArray.length);\n\n      // Verificar que comience con la cabecera PDF\n      const pdfHeader = new TextDecoder().decode(byteArray.slice(0, 4));\n      console.log('PDF Header:', pdfHeader);\n      if (!pdfHeader.startsWith('%PDF')) {\n        console.warn('‚ö†Ô∏è El contenido no es un PDF v√°lido. Detectando tipo de contenido...');\n\n        // Decodificar todo el contenido para ver qu√© es\n        const fullContent = new TextDecoder().decode(byteArray);\n        console.log('Contenido completo:', fullContent);\n\n        // Si parece ser un reporte de texto, mostrarlo en lugar de generar PDF\n        if (fullContent.includes('REPORTE') && fullContent.includes('ESTADO DE CUENTA')) {\n          console.log('üîç Detectado reporte en formato texto - creando versi√≥n descargable');\n\n          // Crear un archivo de texto descargable\n          const textBlob = new Blob([fullContent], {\n            type: 'text/plain;charset=utf-8'\n          });\n          const textUrl = window.URL.createObjectURL(textBlob);\n\n          // Descargar como archivo de texto\n          const link = document.createElement('a');\n          link.href = textUrl;\n          link.download = `reporte-texto-${clientName.replace(/\\s+/g, '-')}-${startDate}-${endDate}.txt`;\n          document.body.appendChild(link);\n          link.click();\n          link.remove();\n\n          // Mostrar vista previa del contenido\n          setTimeout(() => {\n            const reportWindow = window.open('', '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n            if (reportWindow) {\n              reportWindow.document.write(`\n                <html>\n                  <head>\n                    <title>Reporte de Estado de Cuenta - ${clientName}</title>\n                    <style>\n                      body { font-family: 'Courier New', monospace; margin: 20px; background-color: #f5f5f5; }\n                      .report-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n                      h1 { color: #333; text-align: center; border-bottom: 2px solid #0066cc; padding-bottom: 10px; }\n                      .content { white-space: pre-wrap; line-height: 1.6; }\n                      .note { background: #fff3cd; padding: 10px; border-left: 4px solid #ffc107; margin: 20px 0; }\n                    </style>\n                  </head>\n                  <body>\n                    <div class=\"report-container\">\n                      <h1>üìä Reporte de Estado de Cuenta</h1>\n                      <div class=\"note\">\n                        <strong>‚ÑπÔ∏è Nota:</strong> El backend devolvi√≥ el reporte en formato texto. \n                        Archivo descargado como .txt. Para generar un PDF real, el backend debe ser actualizado.\n                      </div>\n                      <div class=\"content\">${fullContent}</div>\n                    </div>\n                  </body>\n                </html>\n              `);\n              reportWindow.document.close();\n            }\n\n            // Limpiar la URL\n            setTimeout(() => {\n              window.URL.revokeObjectURL(textUrl);\n            }, 60000);\n          }, 500);\n          setError('‚úÖ Reporte descargado como archivo de texto y vista previa abierta');\n          return;\n        }\n        console.warn('El archivo no parece ser un PDF v√°lido');\n        // Intentar de todos modos si no se detecta como texto\n      }\n      const blob = new Blob([byteArray], {\n        type: 'application/pdf'\n      });\n      console.log('Blob creado, tama√±o:', blob.size);\n      const url = window.URL.createObjectURL(blob);\n\n      // Descargar el PDF\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `estado-cuenta-${clientName.replace(/\\s+/g, '-')}-${startDate}-${endDate}.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n\n      // Abrir vista previa en nueva ventana despu√©s de la descarga\n      setTimeout(() => {\n        const previewWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n        if (previewWindow) {\n          previewWindow.document.title = `Vista Previa - Estado de Cuenta ${clientName}`;\n        } else {\n          setError('‚ö†Ô∏è PDF descargado. No se pudo abrir la vista previa (popup bloqueado)');\n          window.URL.revokeObjectURL(url);\n          return;\n        }\n\n        // Limpiar la URL despu√©s de un tiempo\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n        }, 60000); // 1 minuto\n      }, 500); // Aumentar el delay\n\n      setError('‚úÖ PDF descargado exitosamente y vista previa abierta');\n    } catch (error) {\n      console.error('Error detallado al procesar PDF:', error);\n      console.error('Base64 que caus√≥ el error:', pdfBase64.substring(0, 100) + '...');\n      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';\n      setError(`‚ùå Error al procesar el PDF: ${errorMessage}`);\n    }\n  };\n  const handlePreviewPDF = () => {\n    if (!pdfBase64) {\n      setError('‚ùå No hay PDF disponible para previsualizar');\n      return;\n    }\n    try {\n      console.log('=== DIAGN√ìSTICO PDF PREVIEW ===');\n      console.log('Base64 original length:', pdfBase64.length);\n      console.log('Base64 primeros 100 caracteres:', pdfBase64.substring(0, 100));\n      console.log('Base64 √∫ltimos 20 caracteres:', pdfBase64.slice(-20));\n\n      // Limpiar el base64\n      let cleanBase64 = pdfBase64.trim();\n\n      // Remover prefijo data:application/pdf;base64, si existe\n      if (cleanBase64.startsWith('data:application/pdf;base64,')) {\n        cleanBase64 = cleanBase64.substring('data:application/pdf;base64,'.length);\n        console.log('Prefijo data: removido');\n      }\n\n      // Validar que sea base64 v√°lido\n      if (!/^[A-Za-z0-9+/]*={0,2}$/.test(cleanBase64)) {\n        console.error('Base64 inv√°lido:', cleanBase64.substring(0, 50));\n        throw new Error('Formato base64 inv√°lido');\n      }\n      console.log('Base64 limpio length:', cleanBase64.length);\n      console.log('Base64 limpio primeros 50:', cleanBase64.substring(0, 50));\n\n      // Convertir base64 a binary\n      const byteCharacters = atob(cleanBase64);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      console.log('Bytes array length:', byteArray.length);\n      console.log('Primeros 20 bytes:', Array.from(byteArray.slice(0, 20)));\n\n      // Verificar cabecera PDF\n      const pdfHeader = new TextDecoder().decode(byteArray.slice(0, 8));\n      console.log('PDF Header detectado:', pdfHeader);\n      console.log('Es PDF v√°lido:', pdfHeader.startsWith('%PDF'));\n\n      // Si no es un PDF v√°lido, podr√≠a ser contenido de texto plano\n      if (!pdfHeader.startsWith('%PDF')) {\n        console.warn('‚ö†Ô∏è El contenido no es un PDF v√°lido. Detectando tipo de contenido...');\n\n        // Decodificar todo el contenido para ver qu√© es\n        const fullContent = new TextDecoder().decode(byteArray);\n        console.log('Contenido completo:', fullContent);\n\n        // Si parece ser un reporte de texto, mostrarlo en lugar de generar PDF\n        if (fullContent.includes('REPORTE') && fullContent.includes('ESTADO DE CUENTA')) {\n          console.log('üîç Detectado reporte en formato texto');\n          setError('‚ÑπÔ∏è El backend devolvi√≥ el reporte en formato texto. Mostrando contenido:');\n\n          // Crear una ventana con el contenido del reporte en texto\n          const reportWindow = window.open('', '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n          if (reportWindow) {\n            reportWindow.document.write(`\n              <html>\n                <head>\n                  <title>Reporte de Estado de Cuenta - ${clientName}</title>\n                  <style>\n                    body { font-family: 'Courier New', monospace; margin: 20px; background-color: #f5f5f5; }\n                    .report-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n                    h1 { color: #333; text-align: center; border-bottom: 2px solid #0066cc; padding-bottom: 10px; }\n                    .content { white-space: pre-wrap; line-height: 1.6; }\n                    .note { background: #fff3cd; padding: 10px; border-left: 4px solid #ffc107; margin: 20px 0; }\n                  </style>\n                </head>\n                <body>\n                  <div class=\"report-container\">\n                    <h1>üìä Reporte de Estado de Cuenta</h1>\n                    <div class=\"note\">\n                      <strong>‚ÑπÔ∏è Nota:</strong> El backend devolvi√≥ el reporte en formato texto. \n                      Para generar un PDF real, el backend debe ser actualizado.\n                    </div>\n                    <div class=\"content\">${fullContent}</div>\n                  </div>\n                </body>\n              </html>\n            `);\n            reportWindow.document.close();\n          }\n          return;\n        }\n        throw new Error(`El archivo no tiene una cabecera PDF v√°lida. Contenido detectado: ${fullContent.substring(0, 100)}...`);\n      }\n      const blob = new Blob([byteArray], {\n        type: 'application/pdf'\n      });\n      console.log('Blob creado exitosamente, tama√±o:', blob.size);\n      const url = window.URL.createObjectURL(blob);\n      console.log('URL del blob:', url);\n\n      // Solo abrir vista previa sin descargar\n      const previewWindow = window.open(url, '_blank', 'width=900,height=700,scrollbars=yes,resizable=yes');\n      if (previewWindow) {\n        previewWindow.document.title = `Vista Previa - Estado de Cuenta ${clientName}`;\n        setError('‚úÖ Vista previa abierta exitosamente');\n\n        // Limpiar la URL despu√©s de un tiempo\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n        }, 60000); // 1 minuto\n      } else {\n        setError('‚ùå No se pudo abrir la vista previa (popup bloqueado)');\n        window.URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Error detallado en preview:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';\n      setError(`‚ùå Error en vista previa: ${errorMessage}`);\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('es-ES', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  const formatDate = dateString => {\n    // La fecha ya viene en formato DD/MM/YYYY, solo la devolvemos tal como est√°\n    return dateString;\n  };\n  const getMovementType = movimiento => {\n    return movimiento > 0 ? 'Dep√≥sito' : 'Retiro';\n  };\n  const getStatusText = estado => {\n    return estado ? 'Activa' : 'Inactiva';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reporte de Estado de Cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          children: \"Fecha de Inicio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"startDate\",\n          type: \"date\",\n          className: \"form-control\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"Fecha de Fin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"endDate\",\n          type: \"date\",\n          className: \"form-control\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clientName\",\n          children: \"Nombre del Cliente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"clientName\",\n          type: \"text\",\n          className: \"form-control\",\n          value: clientName,\n          onChange: e => setClientName(e.target.value),\n          placeholder: \"Ingrese el nombre completo del cliente\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${error.includes('‚úÖ') ? 'success' : 'error'}`,\n        style: {\n          margin: '10px 0',\n          padding: '10px',\n          borderRadius: '4px',\n          backgroundColor: error.includes('‚úÖ') ? '#d4edda' : '#f8d7da',\n          color: error.includes('‚úÖ') ? '#155724' : '#721c24',\n          border: `1px solid ${error.includes('‚úÖ') ? '#c3e6cb' : '#f5c6cb'}`\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleGenerateReport,\n        disabled: loading || !startDate || !endDate || !clientName.trim(),\n        children: loading ? 'Generando...' : 'Buscar Reporte'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), showResults && reportData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resultados del Reporte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            marginLeft: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: handlePreviewPDF,\n            disabled: !pdfBase64,\n            title: \"Ver vista previa del PDF\",\n            children: \"\\uD83D\\uDC41\\uFE0F Vista Previa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: handleDownloadPDF,\n            disabled: !pdfBase64,\n            title: \"Descargar PDF y abrir vista previa\",\n            children: \"\\uD83D\\uDCC4 Descargar PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cliente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No. Cuenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Saldo Inicial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Movimiento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Saldo Disponible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: reportData.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(transaction.fecha)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.cliente\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.numeroCuenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.tipo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status ${transaction.estado ? 'active' : 'inactive'}`,\n                  children: getStatusText(transaction.estado)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(transaction.saldoInicial)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: transaction.movimiento > 0 ? 'positive' : 'negative',\n                children: [transaction.movimiento > 0 ? '+' : '', formatCurrency(transaction.movimiento)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(transaction.saldoDisponible)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Instrucciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Complete todos los campos: fecha de inicio, fecha de fin y nombre del cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Haga clic en \\\"Buscar Reporte\\\" para obtener los movimientos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Si existen movimientos, se mostrar\\xE1 la lista de transacciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use el bot\\xF3n \\\"\\uD83D\\uDC41\\uFE0F Vista Previa\\\" para ver el PDF sin descargarlo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use el bot\\xF3n \\\"\\uD83D\\uDCC4 Descargar PDF\\\" para descargar el archivo y abrir vista previa autom\\xE1ticamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"La fecha de inicio no puede ser mayor que la fecha de fin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Si aparece \\\"popup bloqueado\\\", permita ventanas emergentes para ver la vista previa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionReport, \"B6/NOQupdOGx+LLxA9KvtnVQMYM=\");\n_c = TransactionReport;\nexport default TransactionReport;\nvar _c;\n$RefreshReg$(_c, \"TransactionReport\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TransactionReport","_s","startDate","setStartDate","endDate","setEndDate","clientName","setClientName","loading","setLoading","error","setError","reportData","setReportData","pdfBase64","setPdfBase64","showResults","setShowResults","handleGenerateReport","trim","Date","reportUrl","encodeURIComponent","console","log","response","get","data","length","isAxiosError","_error$response","status","handleDownloadPDF","substring","cleanBase64","startsWith","test","Error","byteCharacters","atob","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","pdfHeader","TextDecoder","decode","slice","warn","fullContent","includes","textBlob","Blob","type","textUrl","window","URL","createObjectURL","link","document","createElement","href","download","replace","body","appendChild","click","remove","setTimeout","reportWindow","open","write","close","revokeObjectURL","blob","size","url","previewWindow","title","errorMessage","message","handlePreviewPDF","from","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","dateString","getMovementType","movimiento","getStatusText","estado","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","disabled","placeholder","margin","padding","borderRadius","backgroundColor","color","border","onClick","marginTop","display","gap","marginLeft","map","transaction","index","fecha","cliente","numeroCuenta","tipo","saldoInicial","saldoDisponible","_c","$RefreshReg$"],"sources":["C:/Users/familia/Documents/gitpro/banking-example/frontend/banking-system/src/presentation/views/TransactionReport.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Views.css';\r\n\r\ninterface ReportData {\r\n  fecha: string;\r\n  cliente: string;\r\n  numeroCuenta: string;\r\n  tipo: string;\r\n  saldoInicial: number;\r\n  estado: boolean;\r\n  movimiento: number;\r\n  saldoDisponible: number;\r\n}\r\n\r\ninterface ReportResponse {\r\n  reportData: ReportData[];\r\n  pdfBase64: string;\r\n}\r\n\r\nconst TransactionReport: React.FC = () => {\r\n  const [startDate, setStartDate] = useState<string>('');\r\n  const [endDate, setEndDate] = useState<string>('');\r\n  const [clientName, setClientName] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [reportData, setReportData] = useState<ReportData[]>([]);\r\n  const [pdfBase64, setPdfBase64] = useState<string>('');\r\n  const [showResults, setShowResults] = useState<boolean>(false);\r\n\r\n\r\n\r\n  const handleGenerateReport = async () => {\r\n    if (!startDate || !endDate || !clientName.trim()) {\r\n      setError('Por favor complete todos los campos: fecha de inicio, fecha de fin y nombre del cliente');\r\n      return;\r\n    }\r\n\r\n    if (new Date(startDate) > new Date(endDate)) {\r\n      setError('La fecha de inicio no puede ser mayor que la fecha de fin');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setShowResults(false);\r\n      \r\n      const reportUrl = `/transaction/reports-report?startDate=${startDate}&endDate=${endDate}&clientName=${encodeURIComponent(clientName)}`;\r\n      \r\n      console.log('Haciendo petici√≥n a:', reportUrl);\r\n      console.log('Par√°metros:', { startDate, endDate, clientName });\r\n      \r\n      const response = await axios.get<ReportResponse>(reportUrl);\r\n      \r\n      console.log('Respuesta recibida:', response.data);\r\n      \r\n      if (response.data && response.data.reportData && response.data.reportData.length > 0) {\r\n        setReportData(response.data.reportData);\r\n        setPdfBase64(response.data.pdfBase64);\r\n        setShowResults(true);\r\n        setError('‚úÖ Reporte generado exitosamente');\r\n      } else {\r\n        setReportData([]);\r\n        setPdfBase64('');\r\n        setShowResults(false);\r\n        setError('‚ùå No se encontraron movimientos para el cliente y fechas especificadas');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setReportData([]);\r\n      setPdfBase64('');\r\n      setShowResults(false);\r\n      \r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response?.status === 404) {\r\n          setError('‚ùå No se encontraron movimientos para el cliente y fechas especificadas');\r\n        } else if (error.response && error.response.status >= 500) {\r\n          setError('‚ùå Error del servidor. Por favor, intente m√°s tarde');\r\n        } else {\r\n          setError('‚ùå Error al generar el reporte. Verifique que el servicio est√© disponible');\r\n        }\r\n      } else {\r\n        setError('‚ùå Error inesperado al generar el reporte');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    if (!pdfBase64) {\r\n      setError('‚ùå No hay PDF disponible para descargar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Base64 original length:', pdfBase64.length);\r\n      console.log('Base64 primeros 50 caracteres:', pdfBase64.substring(0, 50));\r\n      \r\n      // Limpiar el base64 - remover posibles prefijos y espacios\r\n      let cleanBase64 = pdfBase64.trim();\r\n      \r\n      // Remover prefijo data:application/pdf;base64, si existe\r\n      if (cleanBase64.startsWith('data:application/pdf;base64,')) {\r\n        cleanBase64 = cleanBase64.substring('data:application/pdf;base64,'.length);\r\n      }\r\n      \r\n      // Validar que sea base64 v√°lido\r\n      if (!/^[A-Za-z0-9+/]*={0,2}$/.test(cleanBase64)) {\r\n        throw new Error('Formato base64 inv√°lido');\r\n      }\r\n      \r\n      console.log('Base64 limpio length:', cleanBase64.length);\r\n      \r\n      // Convertir base64 a binary\r\n      const byteCharacters = atob(cleanBase64);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      \r\n      console.log('Tama√±o del array de bytes:', byteArray.length);\r\n      \r\n      // Verificar que comience con la cabecera PDF\r\n      const pdfHeader = new TextDecoder().decode(byteArray.slice(0, 4));\r\n      console.log('PDF Header:', pdfHeader);\r\n      \r\n      if (!pdfHeader.startsWith('%PDF')) {\r\n        console.warn('‚ö†Ô∏è El contenido no es un PDF v√°lido. Detectando tipo de contenido...');\r\n        \r\n        // Decodificar todo el contenido para ver qu√© es\r\n        const fullContent = new TextDecoder().decode(byteArray);\r\n        console.log('Contenido completo:', fullContent);\r\n        \r\n        // Si parece ser un reporte de texto, mostrarlo en lugar de generar PDF\r\n        if (fullContent.includes('REPORTE') && fullContent.includes('ESTADO DE CUENTA')) {\r\n          console.log('üîç Detectado reporte en formato texto - creando versi√≥n descargable');\r\n          \r\n          // Crear un archivo de texto descargable\r\n          const textBlob = new Blob([fullContent], { type: 'text/plain;charset=utf-8' });\r\n          const textUrl = window.URL.createObjectURL(textBlob);\r\n          \r\n          // Descargar como archivo de texto\r\n          const link = document.createElement('a');\r\n          link.href = textUrl;\r\n          link.download = `reporte-texto-${clientName.replace(/\\s+/g, '-')}-${startDate}-${endDate}.txt`;\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          link.remove();\r\n          \r\n          // Mostrar vista previa del contenido\r\n          setTimeout(() => {\r\n            const reportWindow = window.open('', '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n            if (reportWindow) {\r\n              reportWindow.document.write(`\r\n                <html>\r\n                  <head>\r\n                    <title>Reporte de Estado de Cuenta - ${clientName}</title>\r\n                    <style>\r\n                      body { font-family: 'Courier New', monospace; margin: 20px; background-color: #f5f5f5; }\r\n                      .report-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\r\n                      h1 { color: #333; text-align: center; border-bottom: 2px solid #0066cc; padding-bottom: 10px; }\r\n                      .content { white-space: pre-wrap; line-height: 1.6; }\r\n                      .note { background: #fff3cd; padding: 10px; border-left: 4px solid #ffc107; margin: 20px 0; }\r\n                    </style>\r\n                  </head>\r\n                  <body>\r\n                    <div class=\"report-container\">\r\n                      <h1>üìä Reporte de Estado de Cuenta</h1>\r\n                      <div class=\"note\">\r\n                        <strong>‚ÑπÔ∏è Nota:</strong> El backend devolvi√≥ el reporte en formato texto. \r\n                        Archivo descargado como .txt. Para generar un PDF real, el backend debe ser actualizado.\r\n                      </div>\r\n                      <div class=\"content\">${fullContent}</div>\r\n                    </div>\r\n                  </body>\r\n                </html>\r\n              `);\r\n              reportWindow.document.close();\r\n            }\r\n            \r\n            // Limpiar la URL\r\n            setTimeout(() => {\r\n              window.URL.revokeObjectURL(textUrl);\r\n            }, 60000);\r\n          }, 500);\r\n          \r\n          setError('‚úÖ Reporte descargado como archivo de texto y vista previa abierta');\r\n          return;\r\n        }\r\n        \r\n        console.warn('El archivo no parece ser un PDF v√°lido');\r\n        // Intentar de todos modos si no se detecta como texto\r\n      }\r\n      \r\n      const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n      console.log('Blob creado, tama√±o:', blob.size);\r\n      \r\n      const url = window.URL.createObjectURL(blob);\r\n      \r\n      // Descargar el PDF\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `estado-cuenta-${clientName.replace(/\\s+/g, '-')}-${startDate}-${endDate}.pdf`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      \r\n      // Abrir vista previa en nueva ventana despu√©s de la descarga\r\n      setTimeout(() => {\r\n        const previewWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n        if (previewWindow) {\r\n          previewWindow.document.title = `Vista Previa - Estado de Cuenta ${clientName}`;\r\n        } else {\r\n          setError('‚ö†Ô∏è PDF descargado. No se pudo abrir la vista previa (popup bloqueado)');\r\n          window.URL.revokeObjectURL(url);\r\n          return;\r\n        }\r\n        \r\n        // Limpiar la URL despu√©s de un tiempo\r\n        setTimeout(() => {\r\n          window.URL.revokeObjectURL(url);\r\n        }, 60000); // 1 minuto\r\n      }, 500); // Aumentar el delay\r\n      \r\n      setError('‚úÖ PDF descargado exitosamente y vista previa abierta');\r\n    } catch (error) {\r\n      console.error('Error detallado al procesar PDF:', error);\r\n      console.error('Base64 que caus√≥ el error:', pdfBase64.substring(0, 100) + '...');\r\n      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';\r\n      setError(`‚ùå Error al procesar el PDF: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  const handlePreviewPDF = () => {\r\n    if (!pdfBase64) {\r\n      setError('‚ùå No hay PDF disponible para previsualizar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('=== DIAGN√ìSTICO PDF PREVIEW ===');\r\n      console.log('Base64 original length:', pdfBase64.length);\r\n      console.log('Base64 primeros 100 caracteres:', pdfBase64.substring(0, 100));\r\n      console.log('Base64 √∫ltimos 20 caracteres:', pdfBase64.slice(-20));\r\n      \r\n      // Limpiar el base64\r\n      let cleanBase64 = pdfBase64.trim();\r\n      \r\n      // Remover prefijo data:application/pdf;base64, si existe\r\n      if (cleanBase64.startsWith('data:application/pdf;base64,')) {\r\n        cleanBase64 = cleanBase64.substring('data:application/pdf;base64,'.length);\r\n        console.log('Prefijo data: removido');\r\n      }\r\n      \r\n      // Validar que sea base64 v√°lido\r\n      if (!/^[A-Za-z0-9+/]*={0,2}$/.test(cleanBase64)) {\r\n        console.error('Base64 inv√°lido:', cleanBase64.substring(0, 50));\r\n        throw new Error('Formato base64 inv√°lido');\r\n      }\r\n      \r\n      console.log('Base64 limpio length:', cleanBase64.length);\r\n      console.log('Base64 limpio primeros 50:', cleanBase64.substring(0, 50));\r\n      \r\n      // Convertir base64 a binary\r\n      const byteCharacters = atob(cleanBase64);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      \r\n      console.log('Bytes array length:', byteArray.length);\r\n      console.log('Primeros 20 bytes:', Array.from(byteArray.slice(0, 20)));\r\n      \r\n      // Verificar cabecera PDF\r\n      const pdfHeader = new TextDecoder().decode(byteArray.slice(0, 8));\r\n      console.log('PDF Header detectado:', pdfHeader);\r\n      console.log('Es PDF v√°lido:', pdfHeader.startsWith('%PDF'));\r\n      \r\n      // Si no es un PDF v√°lido, podr√≠a ser contenido de texto plano\r\n      if (!pdfHeader.startsWith('%PDF')) {\r\n        console.warn('‚ö†Ô∏è El contenido no es un PDF v√°lido. Detectando tipo de contenido...');\r\n        \r\n        // Decodificar todo el contenido para ver qu√© es\r\n        const fullContent = new TextDecoder().decode(byteArray);\r\n        console.log('Contenido completo:', fullContent);\r\n        \r\n        // Si parece ser un reporte de texto, mostrarlo en lugar de generar PDF\r\n        if (fullContent.includes('REPORTE') && fullContent.includes('ESTADO DE CUENTA')) {\r\n          console.log('üîç Detectado reporte en formato texto');\r\n          setError('‚ÑπÔ∏è El backend devolvi√≥ el reporte en formato texto. Mostrando contenido:');\r\n          \r\n          // Crear una ventana con el contenido del reporte en texto\r\n          const reportWindow = window.open('', '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n          if (reportWindow) {\r\n            reportWindow.document.write(`\r\n              <html>\r\n                <head>\r\n                  <title>Reporte de Estado de Cuenta - ${clientName}</title>\r\n                  <style>\r\n                    body { font-family: 'Courier New', monospace; margin: 20px; background-color: #f5f5f5; }\r\n                    .report-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\r\n                    h1 { color: #333; text-align: center; border-bottom: 2px solid #0066cc; padding-bottom: 10px; }\r\n                    .content { white-space: pre-wrap; line-height: 1.6; }\r\n                    .note { background: #fff3cd; padding: 10px; border-left: 4px solid #ffc107; margin: 20px 0; }\r\n                  </style>\r\n                </head>\r\n                <body>\r\n                  <div class=\"report-container\">\r\n                    <h1>üìä Reporte de Estado de Cuenta</h1>\r\n                    <div class=\"note\">\r\n                      <strong>‚ÑπÔ∏è Nota:</strong> El backend devolvi√≥ el reporte en formato texto. \r\n                      Para generar un PDF real, el backend debe ser actualizado.\r\n                    </div>\r\n                    <div class=\"content\">${fullContent}</div>\r\n                  </div>\r\n                </body>\r\n              </html>\r\n            `);\r\n            reportWindow.document.close();\r\n          }\r\n          return;\r\n        }\r\n        \r\n        throw new Error(`El archivo no tiene una cabecera PDF v√°lida. Contenido detectado: ${fullContent.substring(0, 100)}...`);\r\n      }\r\n      \r\n      const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n      \r\n      console.log('Blob creado exitosamente, tama√±o:', blob.size);\r\n      \r\n      const url = window.URL.createObjectURL(blob);\r\n      console.log('URL del blob:', url);\r\n      \r\n      // Solo abrir vista previa sin descargar\r\n      const previewWindow = window.open(url, '_blank', 'width=900,height=700,scrollbars=yes,resizable=yes');\r\n      if (previewWindow) {\r\n        previewWindow.document.title = `Vista Previa - Estado de Cuenta ${clientName}`;\r\n        setError('‚úÖ Vista previa abierta exitosamente');\r\n        \r\n        // Limpiar la URL despu√©s de un tiempo\r\n        setTimeout(() => {\r\n          window.URL.revokeObjectURL(url);\r\n        }, 60000); // 1 minuto\r\n      } else {\r\n        setError('‚ùå No se pudo abrir la vista previa (popup bloqueado)');\r\n        window.URL.revokeObjectURL(url);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error detallado en preview:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';\r\n      setError(`‚ùå Error en vista previa: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number): string => {\r\n    return new Intl.NumberFormat('es-ES', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    // La fecha ya viene en formato DD/MM/YYYY, solo la devolvemos tal como est√°\r\n    return dateString;\r\n  };\r\n\r\n  const getMovementType = (movimiento: number): string => {\r\n    return movimiento > 0 ? 'Dep√≥sito' : 'Retiro';\r\n  };\r\n\r\n  const getStatusText = (estado: boolean): string => {\r\n    return estado ? 'Activa' : 'Inactiva';\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-container\">\r\n      <div className=\"view-header\">\r\n        <h1>Reporte de Estado de Cuenta</h1>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"startDate\">Fecha de Inicio:</label>\r\n          <input\r\n            id=\"startDate\"\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"endDate\">Fecha de Fin:</label>\r\n          <input\r\n            id=\"endDate\"\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"clientName\">Nombre del Cliente:</label>\r\n          <input\r\n            id=\"clientName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={clientName}\r\n            onChange={(e) => setClientName(e.target.value)}\r\n            placeholder=\"Ingrese el nombre completo del cliente\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        \r\n        {error && (\r\n          <div \r\n            className={`message ${error.includes('‚úÖ') ? 'success' : 'error'}`} \r\n            style={{ \r\n              margin: '10px 0', \r\n              padding: '10px', \r\n              borderRadius: '4px',\r\n              backgroundColor: error.includes('‚úÖ') ? '#d4edda' : '#f8d7da',\r\n              color: error.includes('‚úÖ') ? '#155724' : '#721c24',\r\n              border: `1px solid ${error.includes('‚úÖ') ? '#c3e6cb' : '#f5c6cb'}`\r\n            }}\r\n          >\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <button \r\n          className=\"btn btn-primary\" \r\n          onClick={handleGenerateReport}\r\n          disabled={loading || !startDate || !endDate || !clientName.trim()}\r\n        >\r\n          {loading ? 'Generando...' : 'Buscar Reporte'}\r\n        </button>\r\n      </div>\r\n\r\n      {showResults && reportData.length > 0 && (\r\n        <div className=\"card\" style={{ marginTop: '20px' }}>\r\n          <div className=\"view-header\">\r\n            <h2>Resultados del Reporte</h2>\r\n            <div style={{ display: 'flex', gap: '10px', marginLeft: 'auto' }}>\r\n              <button \r\n                className=\"btn btn-secondary\" \r\n                onClick={handlePreviewPDF}\r\n                disabled={!pdfBase64}\r\n                title=\"Ver vista previa del PDF\"\r\n              >\r\n                üëÅÔ∏è Vista Previa\r\n              </button>\r\n              <button \r\n                className=\"btn btn-success\" \r\n                onClick={handleDownloadPDF}\r\n                disabled={!pdfBase64}\r\n                title=\"Descargar PDF y abrir vista previa\"\r\n              >\r\n                üìÑ Descargar PDF\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-container\">\r\n            <table className=\"data-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Fecha</th>\r\n                  <th>Cliente</th>\r\n                  <th>No. Cuenta</th>\r\n                  <th>Tipo</th>\r\n                  <th>Estado</th>\r\n                  <th>Saldo Inicial</th>\r\n                  <th>Movimiento</th>\r\n                  <th>Saldo Disponible</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {reportData.map((transaction, index) => (\r\n                  <tr key={index}>\r\n                    <td>{formatDate(transaction.fecha)}</td>\r\n                    <td>{transaction.cliente}</td>\r\n                    <td>{transaction.numeroCuenta}</td>\r\n                    <td>{transaction.tipo}</td>\r\n                    <td>\r\n                      <span className={`status ${transaction.estado ? 'active' : 'inactive'}`}>\r\n                        {getStatusText(transaction.estado)}\r\n                      </span>\r\n                    </td>\r\n                    <td>{formatCurrency(transaction.saldoInicial)}</td>\r\n                    <td className={transaction.movimiento > 0 ? 'positive' : 'negative'}>\r\n                      {transaction.movimiento > 0 ? '+' : ''}{formatCurrency(transaction.movimiento)}\r\n                    </td>\r\n                    <td>{formatCurrency(transaction.saldoDisponible)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"info-card\" style={{ marginTop: '20px' }}>\r\n        <h3>Instrucciones:</h3>\r\n        <ul>\r\n          <li>Complete todos los campos: fecha de inicio, fecha de fin y nombre del cliente</li>\r\n          <li>Haga clic en \"Buscar Reporte\" para obtener los movimientos</li>\r\n          <li>Si existen movimientos, se mostrar√° la lista de transacciones</li>\r\n          <li>Use el bot√≥n \"üëÅÔ∏è Vista Previa\" para ver el PDF sin descargarlo</li>\r\n          <li>Use el bot√≥n \"üìÑ Descargar PDF\" para descargar el archivo y abrir vista previa autom√°ticamente</li>\r\n          <li>La fecha de inicio no puede ser mayor que la fecha de fin</li>\r\n          <li>Si aparece \"popup bloqueado\", permita ventanas emergentes para ver la vista previa</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * Client Use Cases - Simplified version for demo\n */\nexport let ClientUseCases = /*#__PURE__*/(() => {\n  class ClientUseCases {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:8001/api/v1/client';\n    }\n    /**\n     * Create a new client with basic information\n     */\n    createBasicClient(clientData) {\n      return this.http.post(`${this.baseUrl}/basic`, clientData);\n    }\n    /**\n     * Retrieve all clients from the system\n     */\n    getAllClients() {\n      return this.http.get(this.baseUrl);\n    }\n    /**\n     * Retrieve a specific client by ID\n     */\n    getClientById(id) {\n      return this.http.get(`${this.baseUrl}/${id}`);\n    }\n    /**\n     * Update an existing client's information\n     */\n    updateClient(id, clientData) {\n      return this.http.put(`${this.baseUrl}/${id}`, clientData);\n    }\n    /**\n     * Activate a client account\n     */\n    activateClient(id) {\n      return this.http.patch(`${this.baseUrl}/${id}/activate`, {});\n    }\n    /**\n     * Deactivate a client account\n     */\n    deactivateClient(id) {\n      return this.http.patch(`${this.baseUrl}/${id}/deactivate`, {});\n    }\n    /**\n     * Delete a client from the system\n     */\n    deleteClient(id) {\n      return this.http.delete(`${this.baseUrl}/${id}`);\n    }\n    static {\n      this.ɵfac = function ClientUseCases_Factory(t) {\n        return new (t || ClientUseCases)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ClientUseCases,\n        factory: ClientUseCases.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ClientUseCases;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
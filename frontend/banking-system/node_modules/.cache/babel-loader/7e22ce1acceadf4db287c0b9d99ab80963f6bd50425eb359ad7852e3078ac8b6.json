{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = '/api/v1/client';\nexport class ClientApiRepository {\n  async getAll() {\n    try {\n      console.log('Making request to:', BASE_URL);\n      const response = await axios.get(BASE_URL);\n      console.log('Response status:', response.status);\n      console.log('Response data:', response.data);\n\n      // Verificar si la respuesta es un array\n      if (!Array.isArray(response.data)) {\n        console.error('Expected array but got:', typeof response.data, response.data);\n        throw new Error('Server response is not an array');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error in getAll:', error);\n      if (axios.isAxiosError(error)) {\n        var _error$response, _error$response2, _error$response3;\n        console.error('Response status:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n        console.error('Response data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n        console.error('Response headers:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.headers);\n      }\n      throw error;\n    }\n  }\n  async getById(id) {\n    const response = await axios.get(`${BASE_URL}/${id}`);\n    return response.data;\n  }\n  async create(client) {\n    const response = await axios.post(`${BASE_URL}/basic`, client);\n    return response.data;\n  }\n  async update(id, client) {\n    const response = await axios.put(`${BASE_URL}/${id}`, client);\n    return response.data;\n  }\n  async delete(id) {\n    await axios.delete(`${BASE_URL}/${id}`);\n  }\n  async activate(id) {\n    await axios.patch(`${BASE_URL}/${id}/activate`);\n  }\n  async deactivate(id) {\n    await axios.patch(`${BASE_URL}/${id}/deactivate`);\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","ClientApiRepository","getAll","console","log","response","get","status","data","Array","isArray","error","Error","isAxiosError","_error$response","_error$response2","_error$response3","headers","getById","id","create","client","post","update","put","delete","activate","patch","deactivate"],"sources":["C:/Users/familia/Documents/gitpro/banking-example/frontend/banking-system/src/infrastructure/api/ClientApiRepository.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Client } from '../../domain/entities/Client';\r\nimport { IClientRepository } from '../../domain/repositories/IClientRepository';\r\n\r\nconst BASE_URL = '/api/v1/client';\r\n\r\nexport class ClientApiRepository implements IClientRepository {\r\n    async getAll(): Promise<Client[]> {\r\n        try {\r\n            console.log('Making request to:', BASE_URL);\r\n            const response = await axios.get(BASE_URL);\r\n            console.log('Response status:', response.status);\r\n            console.log('Response data:', response.data);\r\n            \r\n            // Verificar si la respuesta es un array\r\n            if (!Array.isArray(response.data)) {\r\n                console.error('Expected array but got:', typeof response.data, response.data);\r\n                throw new Error('Server response is not an array');\r\n            }\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error in getAll:', error);\r\n            if (axios.isAxiosError(error)) {\r\n                console.error('Response status:', error.response?.status);\r\n                console.error('Response data:', error.response?.data);\r\n                console.error('Response headers:', error.response?.headers);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async getById(id: number): Promise<Client> {\r\n        const response = await axios.get(`${BASE_URL}/${id}`);\r\n        return response.data;\r\n    }\r\n\r\n    async create(client: Client): Promise<Client> {\r\n        const response = await axios.post(`${BASE_URL}/basic`, client);\r\n        return response.data;\r\n    }\r\n\r\n    async update(id: number, client: Client): Promise<Client> {\r\n        const response = await axios.put(`${BASE_URL}/${id}`, client);\r\n        return response.data;\r\n    }\r\n\r\n    async delete(id: number): Promise<void> {\r\n        await axios.delete(`${BASE_URL}/${id}`);\r\n    }\r\n\r\n    async activate(id: number): Promise<void> {\r\n        await axios.patch(`${BASE_URL}/${id}/activate`);\r\n    }\r\n\r\n    async deactivate(id: number): Promise<void> {\r\n        await axios.patch(`${BASE_URL}/${id}/deactivate`);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,QAAQ,GAAG,gBAAgB;AAEjC,OAAO,MAAMC,mBAAmB,CAA8B;EAC1D,MAAMC,MAAMA,CAAA,EAAsB;IAC9B,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAAC;MAC3C,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,QAAQ,CAAC;MAC1CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACE,MAAM,CAAC;MAChDJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACG,IAAI,CAAC;;MAE5C;MACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACG,IAAI,CAAC,EAAE;QAC/BL,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAE,OAAON,QAAQ,CAACG,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAAC;QAC7E,MAAM,IAAII,KAAK,CAAC,iCAAiC,CAAC;MACtD;MAEA,OAAOP,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,IAAIZ,KAAK,CAACc,YAAY,CAACF,KAAK,CAAC,EAAE;QAAA,IAAAG,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;QAC3Bb,OAAO,CAACQ,KAAK,CAAC,kBAAkB,GAAAG,eAAA,GAAEH,KAAK,CAACN,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBP,MAAM,CAAC;QACzDJ,OAAO,CAACQ,KAAK,CAAC,gBAAgB,GAAAI,gBAAA,GAAEJ,KAAK,CAACN,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,CAAC;QACrDL,OAAO,CAACQ,KAAK,CAAC,mBAAmB,GAAAK,gBAAA,GAAEL,KAAK,CAACN,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBC,OAAO,CAAC;MAC/D;MACA,MAAMN,KAAK;IACf;EACJ;EAIA,MAAMO,OAAOA,CAACC,EAAU,EAAmB;IACvC,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,QAAQ,IAAImB,EAAE,EAAE,CAAC;IACrD,OAAOd,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAMY,MAAMA,CAACC,MAAc,EAAmB;IAC1C,MAAMhB,QAAQ,GAAG,MAAMN,KAAK,CAACuB,IAAI,CAAC,GAAGtB,QAAQ,QAAQ,EAAEqB,MAAM,CAAC;IAC9D,OAAOhB,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAMe,MAAMA,CAACJ,EAAU,EAAEE,MAAc,EAAmB;IACtD,MAAMhB,QAAQ,GAAG,MAAMN,KAAK,CAACyB,GAAG,CAAC,GAAGxB,QAAQ,IAAImB,EAAE,EAAE,EAAEE,MAAM,CAAC;IAC7D,OAAOhB,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAMiB,MAAMA,CAACN,EAAU,EAAiB;IACpC,MAAMpB,KAAK,CAAC0B,MAAM,CAAC,GAAGzB,QAAQ,IAAImB,EAAE,EAAE,CAAC;EAC3C;EAEA,MAAMO,QAAQA,CAACP,EAAU,EAAiB;IACtC,MAAMpB,KAAK,CAAC4B,KAAK,CAAC,GAAG3B,QAAQ,IAAImB,EAAE,WAAW,CAAC;EACnD;EAEA,MAAMS,UAAUA,CAACT,EAAU,EAAiB;IACxC,MAAMpB,KAAK,CAAC4B,KAAK,CAAC,GAAG3B,QAAQ,IAAImB,EAAE,aAAa,CAAC;EACrD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
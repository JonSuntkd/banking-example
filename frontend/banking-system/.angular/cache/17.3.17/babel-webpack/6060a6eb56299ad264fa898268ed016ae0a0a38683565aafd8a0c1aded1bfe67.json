{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\n/**\n * Client Form Component for create and edit operations\n */\nlet ClientFormComponent = class ClientFormComponent {\n  constructor(fb, clientUseCases, router, route) {\n    this.fb = fb;\n    this.clientUseCases = clientUseCases;\n    this.router = router;\n    this.route = route;\n    this.loading = false;\n    this.error = null;\n    this.isEditMode = false;\n    this.clientId = null;\n    this.destroy$ = new Subject();\n    this.clientForm = this.createForm();\n  }\n  ngOnInit() {\n    this.checkEditMode();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /**\n   * Create reactive form with validation\n   */\n  createForm() {\n    return this.fb.group({\n      fullName: ['', [Validators.required, Validators.minLength(2)]],\n      address: ['', [Validators.required, Validators.minLength(5)]],\n      phone: ['', [Validators.required, Validators.pattern(/^[+]?[\\d\\s\\-()]+$/)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      status: [true],\n      // Additional fields for full client profile\n      gender: [''],\n      age: ['', [Validators.min(18), Validators.max(120)]],\n      identification: ['', [Validators.pattern(/^\\d{10,13}$/)]]\n    });\n  }\n  /**\n   * Check if component is in edit mode\n   */\n  checkEditMode() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.isEditMode = true;\n      this.clientId = parseInt(id, 10);\n      this.loadClientData();\n    }\n  }\n  /**\n   * Load client data for editing\n   */\n  loadClientData() {\n    if (!this.clientId) return;\n    this.loading = true;\n    this.clientUseCases.getClientById(this.clientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: client => {\n        this.populateForm(client);\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Error al cargar los datos del cliente: ' + error.message;\n        this.loading = false;\n      }\n    });\n  }\n  /**\n   * Populate form with client data\n   */\n  populateForm(client) {\n    this.clientForm.patchValue({\n      fullName: client.person.fullName,\n      address: client.person.address,\n      phone: client.person.phone,\n      password: client.password,\n      status: client.status,\n      gender: client.person.gender || '',\n      age: client.person.age || '',\n      identification: client.person.identification || ''\n    });\n  }\n  /**\n   * Submit form data\n   */\n  onSubmit() {\n    if (this.clientForm.invalid) {\n      this.markFormGroupTouched();\n      return;\n    }\n    this.loading = true;\n    this.error = null;\n    if (this.isEditMode) {\n      this.updateClient();\n    } else {\n      this.createClient();\n    }\n  }\n  /**\n   * Create new client\n   */\n  createClient() {\n    const formValue = this.clientForm.value;\n    const clientData = {\n      fullName: formValue.fullName,\n      address: formValue.address,\n      phone: formValue.phone,\n      password: formValue.password,\n      status: formValue.status\n    };\n    this.clientUseCases.createBasicClient(clientData).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.router.navigate(['/clientes']);\n      },\n      error: error => {\n        this.error = 'Error al crear el cliente: ' + error.message;\n        this.loading = false;\n      }\n    });\n  }\n  /**\n   * Update existing client\n   */\n  updateClient() {\n    if (!this.clientId) return;\n    const formValue = this.clientForm.value;\n    const clientData = {\n      person: {\n        fullName: formValue.fullName,\n        address: formValue.address,\n        phone: formValue.phone,\n        gender: formValue.gender || undefined,\n        age: formValue.age || undefined,\n        identification: formValue.identification || undefined\n      },\n      password: formValue.password,\n      status: formValue.status\n    };\n    this.clientUseCases.updateClient(this.clientId, clientData).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.router.navigate(['/clientes']);\n      },\n      error: error => {\n        this.error = 'Error al actualizar el cliente: ' + error.message;\n        this.loading = false;\n      }\n    });\n  }\n  /**\n   * Cancel form and navigate back\n   */\n  onCancel() {\n    this.router.navigate(['/clientes']);\n  }\n  /**\n   * Mark all form controls as touched\n   */\n  markFormGroupTouched() {\n    Object.keys(this.clientForm.controls).forEach(key => {\n      this.clientForm.get(key)?.markAsTouched();\n    });\n  }\n  /**\n   * Check if field has error\n   */\n  hasError(fieldName, errorType) {\n    const field = this.clientForm.get(fieldName);\n    if (!field) return false;\n    if (errorType) {\n      return field.hasError(errorType) && (field.dirty || field.touched);\n    }\n    return field.invalid && (field.dirty || field.touched);\n  }\n  /**\n   * Get error message for field\n   */\n  getErrorMessage(fieldName) {\n    const field = this.clientForm.get(fieldName);\n    if (!field || !field.errors) return '';\n    const errors = field.errors;\n    if (errors['required']) {\n      return `${this.getFieldDisplayName(fieldName)} es requerido`;\n    }\n    if (errors['minlength']) {\n      return `${this.getFieldDisplayName(fieldName)} debe tener al menos ${errors['minlength'].requiredLength} caracteres`;\n    }\n    if (errors['pattern']) {\n      return `${this.getFieldDisplayName(fieldName)} tiene un formato inválido`;\n    }\n    if (errors['min']) {\n      return `La edad mínima es ${errors['min'].min} años`;\n    }\n    if (errors['max']) {\n      return `La edad máxima es ${errors['max'].max} años`;\n    }\n    return 'Campo inválido';\n  }\n  /**\n   * Get display name for field\n   */\n  getFieldDisplayName(fieldName) {\n    const fieldNames = {\n      fullName: 'Nombre completo',\n      address: 'Dirección',\n      phone: 'Teléfono',\n      password: 'Contraseña',\n      gender: 'Género',\n      age: 'Edad',\n      identification: 'Identificación'\n    };\n    return fieldNames[fieldName] || fieldName;\n  }\n};\nClientFormComponent = __decorate([Component({\n  selector: 'app-client-form',\n  templateUrl: './client-form.component.html',\n  styleUrls: ['./client-form.component.css']\n})], ClientFormComponent);\nexport { ClientFormComponent };","map":{"version":3,"names":["Component","Validators","Subject","takeUntil","ClientFormComponent","constructor","fb","clientUseCases","router","route","loading","error","isEditMode","clientId","destroy$","clientForm","createForm","ngOnInit","checkEditMode","ngOnDestroy","next","complete","group","fullName","required","minLength","address","phone","pattern","password","status","gender","age","min","max","identification","id","snapshot","paramMap","get","parseInt","loadClientData","getClientById","pipe","subscribe","client","populateForm","message","patchValue","person","onSubmit","invalid","markFormGroupTouched","updateClient","createClient","formValue","value","clientData","createBasicClient","navigate","undefined","onCancel","Object","keys","controls","forEach","key","markAsTouched","hasError","fieldName","errorType","field","dirty","touched","getErrorMessage","errors","getFieldDisplayName","requiredLength","fieldNames","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\familia\\Documents\\gitpro\\banking-example\\frontend\\banking-system\\src\\app\\presentation\\modules\\client\\components\\client-form\\client-form.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ClientUseCases } from '../../../../application/use-cases/client-simple.use-cases';\r\nimport { Client, ClientBasicDto, ClientUpdateDto } from '../../../../domain/entities/client.entity';\r\n\r\n/**\r\n * Client Form Component for create and edit operations\r\n */\r\n@Component({\r\n  selector: 'app-client-form',\r\n  templateUrl: './client-form.component.html',\r\n  styleUrls: ['./client-form.component.css']\r\n})\r\nexport class ClientFormComponent implements OnInit, OnDestroy {\r\n  clientForm: FormGroup;\r\n  loading = false;\r\n  error: string | null = null;\r\n  isEditMode = false;\r\n  clientId: number | null = null;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly clientUseCases: ClientUseCases,\r\n    private readonly router: Router,\r\n    private readonly route: ActivatedRoute\r\n  ) {\r\n    this.clientForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkEditMode();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Create reactive form with validation\r\n   */\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      fullName: ['', [Validators.required, Validators.minLength(2)]],\r\n      address: ['', [Validators.required, Validators.minLength(5)]],\r\n      phone: ['', [Validators.required, Validators.pattern(/^[+]?[\\d\\s\\-()]+$/)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      status: [true],\r\n      // Additional fields for full client profile\r\n      gender: [''],\r\n      age: ['', [Validators.min(18), Validators.max(120)]],\r\n      identification: ['', [Validators.pattern(/^\\d{10,13}$/)]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if component is in edit mode\r\n   */\r\n  private checkEditMode(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      this.isEditMode = true;\r\n      this.clientId = parseInt(id, 10);\r\n      this.loadClientData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load client data for editing\r\n   */\r\n  private loadClientData(): void {\r\n    if (!this.clientId) return;\r\n\r\n    this.loading = true;\r\n    this.clientUseCases.getClientById(this.clientId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (client: Client) => {\r\n          this.populateForm(client);\r\n          this.loading = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.error = 'Error al cargar los datos del cliente: ' + error.message;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Populate form with client data\r\n   */\r\n  private populateForm(client: Client): void {\r\n    this.clientForm.patchValue({\r\n      fullName: client.person.fullName,\r\n      address: client.person.address,\r\n      phone: client.person.phone,\r\n      password: client.password,\r\n      status: client.status,\r\n      gender: client.person.gender || '',\r\n      age: client.person.age || '',\r\n      identification: client.person.identification || ''\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Submit form data\r\n   */\r\n  onSubmit(): void {\r\n    if (this.clientForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    if (this.isEditMode) {\r\n      this.updateClient();\r\n    } else {\r\n      this.createClient();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create new client\r\n   */\r\n  private createClient(): void {\r\n    const formValue = this.clientForm.value;\r\n    const clientData: ClientBasicDto = {\r\n      fullName: formValue.fullName,\r\n      address: formValue.address,\r\n      phone: formValue.phone,\r\n      password: formValue.password,\r\n      status: formValue.status\r\n    };\r\n\r\n    this.clientUseCases.createBasicClient(clientData)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate(['/clientes']);\r\n        },\r\n        error: (error: any) => {\r\n          this.error = 'Error al crear el cliente: ' + error.message;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Update existing client\r\n   */\r\n  private updateClient(): void {\r\n    if (!this.clientId) return;\r\n\r\n    const formValue = this.clientForm.value;\r\n    const clientData: ClientUpdateDto = {\r\n      person: {\r\n        fullName: formValue.fullName,\r\n        address: formValue.address,\r\n        phone: formValue.phone,\r\n        gender: formValue.gender || undefined,\r\n        age: formValue.age || undefined,\r\n        identification: formValue.identification || undefined\r\n      },\r\n      password: formValue.password,\r\n      status: formValue.status\r\n    };\r\n\r\n    this.clientUseCases.updateClient(this.clientId, clientData)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.router.navigate(['/clientes']);\r\n        },\r\n        error: (error: any) => {\r\n          this.error = 'Error al actualizar el cliente: ' + error.message;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Cancel form and navigate back\r\n   */\r\n  onCancel(): void {\r\n    this.router.navigate(['/clientes']);\r\n  }\r\n\r\n  /**\r\n   * Mark all form controls as touched\r\n   */\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.clientForm.controls).forEach(key => {\r\n      this.clientForm.get(key)?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if field has error\r\n   */\r\n  hasError(fieldName: string, errorType?: string): boolean {\r\n    const field = this.clientForm.get(fieldName);\r\n    if (!field) return false;\r\n\r\n    if (errorType) {\r\n      return field.hasError(errorType) && (field.dirty || field.touched);\r\n    }\r\n    \r\n    return field.invalid && (field.dirty || field.touched);\r\n  }\r\n\r\n  /**\r\n   * Get error message for field\r\n   */\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.clientForm.get(fieldName);\r\n    if (!field || !field.errors) return '';\r\n\r\n    const errors = field.errors;\r\n    \r\n    if (errors['required']) {\r\n      return `${this.getFieldDisplayName(fieldName)} es requerido`;\r\n    }\r\n    \r\n    if (errors['minlength']) {\r\n      return `${this.getFieldDisplayName(fieldName)} debe tener al menos ${errors['minlength'].requiredLength} caracteres`;\r\n    }\r\n    \r\n    if (errors['pattern']) {\r\n      return `${this.getFieldDisplayName(fieldName)} tiene un formato inválido`;\r\n    }\r\n    \r\n    if (errors['min']) {\r\n      return `La edad mínima es ${errors['min'].min} años`;\r\n    }\r\n    \r\n    if (errors['max']) {\r\n      return `La edad máxima es ${errors['max'].max} años`;\r\n    }\r\n\r\n    return 'Campo inválido';\r\n  }\r\n\r\n  /**\r\n   * Get display name for field\r\n   */\r\n  private getFieldDisplayName(fieldName: string): string {\r\n    const fieldNames: { [key: string]: string } = {\r\n      fullName: 'Nombre completo',\r\n      address: 'Dirección',\r\n      phone: 'Teléfono',\r\n      password: 'Contraseña',\r\n      gender: 'Género',\r\n      age: 'Edad',\r\n      identification: 'Identificación'\r\n    };\r\n    \r\n    return fieldNames[fieldName] || fieldName;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
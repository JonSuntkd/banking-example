{"ast":null,"code":"export class ClientController {\n  constructor(repository) {\n    this.repository = repository;\n  }\n  async getAllClients() {\n    return this.repository.getAll();\n  }\n  async getClientById(id) {\n    return this.repository.getById(id);\n  }\n  async createClient(client) {\n    return this.repository.create(client);\n  }\n  async updateClient(id, client) {\n    return this.repository.update(id, client);\n  }\n  async deleteClient(id) {\n    return this.repository.delete(id);\n  }\n  async activateClient(id) {\n    return this.repository.activate(id);\n  }\n  async deactivateClient(id) {\n    return this.repository.deactivate(id);\n  }\n}","map":{"version":3,"names":["ClientController","constructor","repository","getAllClients","getAll","getClientById","id","getById","createClient","client","create","updateClient","update","deleteClient","delete","activateClient","activate","deactivateClient","deactivate"],"sources":["C:/Users/familia/Documents/gitpro/banking-example/frontend/banking-system/src/application/controllers/ClientController.ts"],"sourcesContent":["import { Client } from '../../domain/entities/Client';\r\nimport { IClientRepository } from '../../domain/repositories/IClientRepository';\r\n\r\nexport class ClientController {\r\n    constructor(private repository: IClientRepository) {}\r\n\r\n    async getAllClients(): Promise<Client[]> {\r\n        return this.repository.getAll();\r\n    }\r\n\r\n    async getClientById(id: number): Promise<Client> {\r\n        return this.repository.getById(id);\r\n    }\r\n\r\n    async createClient(client: Client): Promise<Client> {\r\n        return this.repository.create(client);\r\n    }\r\n\r\n    async updateClient(id: number, client: Client): Promise<Client> {\r\n        return this.repository.update(id, client);\r\n    }\r\n\r\n    async deleteClient(id: number): Promise<void> {\r\n        return this.repository.delete(id);\r\n    }\r\n\r\n    async activateClient(id: number): Promise<void> {\r\n        return this.repository.activate(id);\r\n    }\r\n\r\n    async deactivateClient(id: number): Promise<void> {\r\n        return this.repository.deactivate(id);\r\n    }\r\n}"],"mappings":"AAGA,OAAO,MAAMA,gBAAgB,CAAC;EAC1BC,WAAWA,CAASC,UAA6B,EAAE;IAAA,KAA/BA,UAA6B,GAA7BA,UAA6B;EAAG;EAEpD,MAAMC,aAAaA,CAAA,EAAsB;IACrC,OAAO,IAAI,CAACD,UAAU,CAACE,MAAM,CAAC,CAAC;EACnC;EAEA,MAAMC,aAAaA,CAACC,EAAU,EAAmB;IAC7C,OAAO,IAAI,CAACJ,UAAU,CAACK,OAAO,CAACD,EAAE,CAAC;EACtC;EAEA,MAAME,YAAYA,CAACC,MAAc,EAAmB;IAChD,OAAO,IAAI,CAACP,UAAU,CAACQ,MAAM,CAACD,MAAM,CAAC;EACzC;EAEA,MAAME,YAAYA,CAACL,EAAU,EAAEG,MAAc,EAAmB;IAC5D,OAAO,IAAI,CAACP,UAAU,CAACU,MAAM,CAACN,EAAE,EAAEG,MAAM,CAAC;EAC7C;EAEA,MAAMI,YAAYA,CAACP,EAAU,EAAiB;IAC1C,OAAO,IAAI,CAACJ,UAAU,CAACY,MAAM,CAACR,EAAE,CAAC;EACrC;EAEA,MAAMS,cAAcA,CAACT,EAAU,EAAiB;IAC5C,OAAO,IAAI,CAACJ,UAAU,CAACc,QAAQ,CAACV,EAAE,CAAC;EACvC;EAEA,MAAMW,gBAAgBA,CAACX,EAAU,EAAiB;IAC9C,OAAO,IAAI,CAACJ,UAAU,CAACgB,UAAU,CAACZ,EAAE,CAAC;EACzC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
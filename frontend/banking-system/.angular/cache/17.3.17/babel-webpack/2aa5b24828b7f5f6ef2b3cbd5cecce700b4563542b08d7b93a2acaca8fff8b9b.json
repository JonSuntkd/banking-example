{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\n/**\n * Client List Component following MVC pattern\n * Controller for managing client list view and operations\n */\nlet ClientListComponent = class ClientListComponent {\n  constructor(clientUseCases, router) {\n    this.clientUseCases = clientUseCases;\n    this.router = router;\n    this.clients = [];\n    this.filteredClients = [];\n    this.loading = false;\n    this.error = null;\n    this.searchTerm = '';\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.loadClients();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /**\n   * Load all clients from the system\n   */\n  loadClients() {\n    this.loading = true;\n    this.error = null;\n    this.clientUseCases.getAllClients().pipe(takeUntil(this.destroy$)).subscribe({\n      next: clients => {\n        this.clients = clients;\n        this.filteredClients = clients;\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Error al cargar los clientes: ' + error.message;\n        this.loading = false;\n      }\n    });\n  }\n  /**\n   * Filter clients based on search term\n   */\n  onSearch() {\n    if (!this.searchTerm.trim()) {\n      this.filteredClients = this.clients;\n      return;\n    }\n    const term = this.searchTerm.toLowerCase();\n    this.filteredClients = this.clients.filter(client => client.person.fullName.toLowerCase().includes(term) || client.person.phone.toLowerCase().includes(term) || client.person.address.toLowerCase().includes(term));\n  }\n  /**\n   * Navigate to create new client form\n   */\n  createClient() {\n    this.router.navigate(['/clientes/nuevo']);\n  }\n  /**\n   * Navigate to edit client form\n   */\n  editClient(clientId) {\n    this.router.navigate(['/clientes/editar', clientId]);\n  }\n  /**\n   * Activate client account\n   */\n  activateClient(clientId) {\n    if (!confirm('¿Está seguro de que desea activar este cliente?')) {\n      return;\n    }\n    this.clientUseCases.activateClient(clientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.loadClients();\n      },\n      error: error => {\n        this.error = 'Error al activar el cliente: ' + error.message;\n      }\n    });\n  }\n  /**\n   * Deactivate client account\n   */\n  deactivateClient(clientId) {\n    if (!confirm('¿Está seguro de que desea desactivar este cliente?')) {\n      return;\n    }\n    this.clientUseCases.deactivateClient(clientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.loadClients();\n      },\n      error: error => {\n        this.error = 'Error al desactivar el cliente: ' + error.message;\n      }\n    });\n  }\n  /**\n   * Delete client from the system\n   */\n  deleteClient(clientId) {\n    if (!confirm('¿Está seguro de que desea eliminar este cliente? Esta acción no se puede deshacer.')) {\n      return;\n    }\n    this.clientUseCases.deleteClient(clientId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        this.loadClients();\n      },\n      error: error => {\n        this.error = 'Error al eliminar el cliente: ' + error.message;\n      }\n    });\n  }\n  /**\n   * Get status badge class for client\n   */\n  getStatusClass(status) {\n    return status ? 'status-active' : 'status-inactive';\n  }\n  /**\n   * Get status text for client\n   */\n  getStatusText(status) {\n    return status ? 'Activo' : 'Inactivo';\n  }\n  /**\n   * Track by function for ngFor optimization\n   */\n  trackByClientId(index, client) {\n    return client.id || index;\n  }\n};\nClientListComponent = __decorate([Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})], ClientListComponent);\nexport { ClientListComponent };","map":{"version":3,"names":["Component","Subject","takeUntil","ClientListComponent","constructor","clientUseCases","router","clients","filteredClients","loading","error","searchTerm","destroy$","ngOnInit","loadClients","ngOnDestroy","next","complete","getAllClients","pipe","subscribe","message","onSearch","trim","term","toLowerCase","filter","client","person","fullName","includes","phone","address","createClient","navigate","editClient","clientId","activateClient","confirm","deactivateClient","deleteClient","getStatusClass","status","getStatusText","trackByClientId","index","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\familia\\Documents\\gitpro\\banking-example\\frontend\\banking-system\\src\\app\\presentation\\modules\\client\\components\\client-list\\client-list.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ClientUseCases } from '../../../../application/use-cases/client-simple.use-cases';\r\nimport { Client } from '../../../../domain/entities/client.entity';\r\n\r\n/**\r\n * Client List Component following MVC pattern\r\n * Controller for managing client list view and operations\r\n */\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit, OnDestroy {\r\n  clients: Client[] = [];\r\n  filteredClients: Client[] = [];\r\n  loading = false;\r\n  error: string | null = null;\r\n  searchTerm = '';\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly clientUseCases: ClientUseCases,\r\n    private readonly router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadClients();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Load all clients from the system\r\n   */\r\n  loadClients(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.clientUseCases.getAllClients()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (clients) => {\r\n          this.clients = clients;\r\n          this.filteredClients = clients;\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Error al cargar los clientes: ' + error.message;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Filter clients based on search term\r\n   */\r\n  onSearch(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredClients = this.clients;\r\n      return;\r\n    }\r\n\r\n    const term = this.searchTerm.toLowerCase();\r\n    this.filteredClients = this.clients.filter(client =>\r\n      client.person.fullName.toLowerCase().includes(term) ||\r\n      client.person.phone.toLowerCase().includes(term) ||\r\n      client.person.address.toLowerCase().includes(term)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigate to create new client form\r\n   */\r\n  createClient(): void {\r\n    this.router.navigate(['/clientes/nuevo']);\r\n  }\r\n\r\n  /**\r\n   * Navigate to edit client form\r\n   */\r\n  editClient(clientId: number): void {\r\n    this.router.navigate(['/clientes/editar', clientId]);\r\n  }\r\n\r\n  /**\r\n   * Activate client account\r\n   */\r\n  activateClient(clientId: number): void {\r\n    if (!confirm('¿Está seguro de que desea activar este cliente?')) {\r\n      return;\r\n    }\r\n\r\n    this.clientUseCases.activateClient(clientId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.loadClients();\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Error al activar el cliente: ' + error.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Deactivate client account\r\n   */\r\n  deactivateClient(clientId: number): void {\r\n    if (!confirm('¿Está seguro de que desea desactivar este cliente?')) {\r\n      return;\r\n    }\r\n\r\n    this.clientUseCases.deactivateClient(clientId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.loadClients();\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Error al desactivar el cliente: ' + error.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Delete client from the system\r\n   */\r\n  deleteClient(clientId: number): void {\r\n    if (!confirm('¿Está seguro de que desea eliminar este cliente? Esta acción no se puede deshacer.')) {\r\n      return;\r\n    }\r\n\r\n    this.clientUseCases.deleteClient(clientId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: () => {\r\n          this.loadClients();\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Error al eliminar el cliente: ' + error.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get status badge class for client\r\n   */\r\n  getStatusClass(status: boolean): string {\r\n    return status ? 'status-active' : 'status-inactive';\r\n  }\r\n\r\n  /**\r\n   * Get status text for client\r\n   */\r\n  getStatusText(status: boolean): string {\r\n    return status ? 'Activo' : 'Inactivo';\r\n  }\r\n\r\n  /**\r\n   * Track by function for ngFor optimization\r\n   */\r\n  trackByClientId(index: number, client: Client): number {\r\n    return client.id || index;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
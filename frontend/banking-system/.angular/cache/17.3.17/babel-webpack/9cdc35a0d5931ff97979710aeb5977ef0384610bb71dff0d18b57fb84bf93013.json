{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * HTTP implementation of ClientRepository\n * Handles all HTTP communication with the client microservice\n */\nexport class ClientHttpRepository {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8001/api/v1/client';\n  }\n  createBasicClient(client) {\n    return this.http.post(`${this.baseUrl}/basic`, client);\n  }\n  getAllClients() {\n    return this.http.get(this.baseUrl);\n  }\n  getClientById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateClient(id, client) {\n    return this.http.put(`${this.baseUrl}/${id}`, client);\n  }\n  activateClient(id) {\n    return this.http.patch(`${this.baseUrl}/${id}/activate`, {});\n  }\n  deactivateClient(id) {\n    return this.http.patch(`${this.baseUrl}/${id}/deactivate`, {});\n  }\n  deleteClient(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ClientHttpRepository_Factory(t) {\n      return new (t || ClientHttpRepository)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClientHttpRepository,\n      factory: ClientHttpRepository.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ClientHttpRepository","constructor","http","baseUrl","createBasicClient","client","post","getAllClients","get","getClientById","id","updateClient","put","activateClient","patch","deactivateClient","deleteClient","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\familia\\Documents\\gitpro\\banking-example\\frontend\\banking-system\\src\\app\\infrastructure\\http\\client-http.repository.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientRepository } from '@domain/repositories/client.repository';\r\nimport { Client, ClientBasicDto, ClientUpdateDto } from '@domain/entities/client.entity';\r\n\r\n/**\r\n * HTTP implementation of ClientRepository\r\n * Handles all HTTP communication with the client microservice\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientHttpRepository implements ClientRepository {\r\n  private readonly baseUrl = 'http://localhost:8001/api/v1/client';\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  createBasicClient(client: ClientBasicDto): Observable<Client> {\r\n    return this.http.post<Client>(`${this.baseUrl}/basic`, client);\r\n  }\r\n\r\n  getAllClients(): Observable<Client[]> {\r\n    return this.http.get<Client[]>(this.baseUrl);\r\n  }\r\n\r\n  getClientById(id: number): Observable<Client> {\r\n    return this.http.get<Client>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  updateClient(id: number, client: ClientUpdateDto): Observable<Client> {\r\n    return this.http.put<Client>(`${this.baseUrl}/${id}`, client);\r\n  }\r\n\r\n  activateClient(id: number): Observable<void> {\r\n    return this.http.patch<void>(`${this.baseUrl}/${id}/activate`, {});\r\n  }\r\n\r\n  deactivateClient(id: number): Observable<void> {\r\n    return this.http.patch<void>(`${this.baseUrl}/${id}/deactivate`, {});\r\n  }\r\n\r\n  deleteClient(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}"],"mappings":";;AAMA;;;;AAOA,OAAM,MAAOA,oBAAoB;EAG/BC,YAA6BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,qCAAqC;EAEhB;EAEhDC,iBAAiBA,CAACC,MAAsB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEE,MAAM,CAAC;EAChE;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,OAAO,CAAC;EAC9C;EAEAM,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EACvD;EAEAC,YAAYA,CAACD,EAAU,EAAEL,MAAuB;IAC9C,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEL,MAAM,CAAC;EAC/D;EAEAQ,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACY,KAAK,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,WAAW,EAAE,EAAE,CAAC;EACpE;EAEAK,gBAAgBA,CAACL,EAAU;IACzB,OAAO,IAAI,CAACR,IAAI,CAACY,KAAK,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,aAAa,EAAE,EAAE,CAAC;EACtE;EAEAM,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACd,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBA/BWV,oBAAoB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAApBrB,oBAAoB;MAAAsB,OAAA,EAApBtB,oBAAoB,CAAAuB,IAAA;MAAAC,UAAA,EAFnB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
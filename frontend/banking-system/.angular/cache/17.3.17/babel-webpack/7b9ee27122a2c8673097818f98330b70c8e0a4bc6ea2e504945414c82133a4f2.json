{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * HTTP implementation of AccountRepository\n */\nexport class AccountHttpRepository {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8002/account';\n  }\n  createAccountWithClient(account) {\n    return this.http.post(`${this.baseUrl}/with-client`, account);\n  }\n  getAllAccounts() {\n    return this.http.get(this.baseUrl);\n  }\n  getAccountById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateAccount(id, account) {\n    return this.http.put(`${this.baseUrl}/${id}`, account);\n  }\n  deleteAccount(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AccountHttpRepository_Factory(t) {\n      return new (t || AccountHttpRepository)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AccountHttpRepository,\n      factory: AccountHttpRepository.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AccountHttpRepository","constructor","http","baseUrl","createAccountWithClient","account","post","getAllAccounts","get","getAccountById","id","updateAccount","put","deleteAccount","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\familia\\Documents\\gitpro\\banking-example\\frontend\\banking-system\\src\\app\\infrastructure\\http\\account-http.repository.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountRepository } from '@domain/repositories/account.repository';\r\nimport { Account, AccountWithClientDto, AccountUpdateDto } from '@domain/entities/account.entity';\r\n\r\n/**\r\n * HTTP implementation of AccountRepository\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountHttpRepository implements AccountRepository {\r\n  private readonly baseUrl = 'http://localhost:8002/account';\r\n\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  createAccountWithClient(account: AccountWithClientDto): Observable<Account> {\r\n    return this.http.post<Account>(`${this.baseUrl}/with-client`, account);\r\n  }\r\n\r\n  getAllAccounts(): Observable<Account[]> {\r\n    return this.http.get<Account[]>(this.baseUrl);\r\n  }\r\n\r\n  getAccountById(id: number): Observable<Account> {\r\n    return this.http.get<Account>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  updateAccount(id: number, account: AccountUpdateDto): Observable<Account> {\r\n    return this.http.put<Account>(`${this.baseUrl}/${id}`, account);\r\n  }\r\n\r\n  deleteAccount(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}"],"mappings":";;AAMA;;;AAMA,OAAM,MAAOA,qBAAqB;EAGhCC,YAA6BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,+BAA+B;EAEV;EAEhDC,uBAAuBA,CAACC,OAA6B;IACnD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,GAAG,IAAI,CAACH,OAAO,cAAc,EAAEE,OAAO,CAAC;EACxE;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,IAAI,CAACL,OAAO,CAAC;EAC/C;EAEAM,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;EAEAC,aAAaA,CAACD,EAAU,EAAEL,OAAyB;IACjD,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEL,OAAO,CAAC;EACjE;EAEAQ,aAAaA,CAACH,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;;uBAvBWV,qBAAqB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAArBlB,qBAAqB;MAAAmB,OAAA,EAArBnB,qBAAqB,CAAAoB,IAAA;MAAAC,UAAA,EAFpB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
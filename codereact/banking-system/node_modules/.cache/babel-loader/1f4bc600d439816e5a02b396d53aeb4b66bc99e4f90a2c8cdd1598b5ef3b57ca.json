{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8001/api/v1/client';\nexport class ClientApiRepository {\n  async getAll() {\n    try {\n      const response = await axios.get(BASE_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching clients:', error);\n      throw new Error('Failed to fetch clients');\n    }\n  }\n  async getById(id) {\n    const response = await axios.get(`${BASE_URL}/${id}`);\n    return response.data;\n  }\n  async create(client) {\n    const response = await axios.post(`${BASE_URL}/basic`, client);\n    return response.data;\n  }\n  async update(id, client) {\n    const response = await axios.put(`${BASE_URL}/${id}`, client);\n    return response.data;\n  }\n  async delete(id) {\n    await axios.delete(`${BASE_URL}/${id}`);\n  }\n  async activate(id) {\n    await axios.patch(`${BASE_URL}/${id}/activate`);\n  }\n  async deactivate(id) {\n    await axios.patch(`${BASE_URL}/${id}/deactivate`);\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","ClientApiRepository","getAll","response","get","data","error","console","Error","getById","id","create","client","post","update","put","delete","activate","patch","deactivate"],"sources":["C:/Users/familia/Documents/gitpro/codereact/banking-system/src/infrastructure/api/ClientApiRepository.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Client } from '../../domain/entities/Client';\r\nimport { IClientRepository } from '../../domain/repositories/IClientRepository';\r\n\r\nconst BASE_URL = 'http://localhost:8001/api/v1/client';\r\n\r\nexport class ClientApiRepository implements IClientRepository {\r\n    async getAll(): Promise<Client[]> {\r\n        try {\r\n            const response = await axios.get(BASE_URL);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching clients:', error);\r\n            throw new Error('Failed to fetch clients');\r\n        }\r\n    }\r\n\r\n    async getById(id: number): Promise<Client> {\r\n        const response = await axios.get(`${BASE_URL}/${id}`);\r\n        return response.data;\r\n    }\r\n\r\n    async create(client: Client): Promise<Client> {\r\n        const response = await axios.post(`${BASE_URL}/basic`, client);\r\n        return response.data;\r\n    }\r\n\r\n    async update(id: number, client: Client): Promise<Client> {\r\n        const response = await axios.put(`${BASE_URL}/${id}`, client);\r\n        return response.data;\r\n    }\r\n\r\n    async delete(id: number): Promise<void> {\r\n        await axios.delete(`${BASE_URL}/${id}`);\r\n    }\r\n\r\n    async activate(id: number): Promise<void> {\r\n        await axios.patch(`${BASE_URL}/${id}/activate`);\r\n    }\r\n\r\n    async deactivate(id: number): Promise<void> {\r\n        await axios.patch(`${BASE_URL}/${id}/deactivate`);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,OAAO,MAAMC,mBAAmB,CAA8B;EAC1D,MAAMC,MAAMA,CAAA,EAAsB;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,QAAQ,CAAC;MAC1C,OAAOG,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;IAC9C;EACJ;EAEA,MAAMC,OAAOA,CAACC,EAAU,EAAmB;IACvC,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,IAAIU,EAAE,EAAE,CAAC;IACrD,OAAOP,QAAQ,CAACE,IAAI;EACxB;EAEA,MAAMM,MAAMA,CAACC,MAAc,EAAmB;IAC1C,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAI,CAAC,GAAGb,QAAQ,QAAQ,EAAEY,MAAM,CAAC;IAC9D,OAAOT,QAAQ,CAACE,IAAI;EACxB;EAEA,MAAMS,MAAMA,CAACJ,EAAU,EAAEE,MAAc,EAAmB;IACtD,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAC,GAAGf,QAAQ,IAAIU,EAAE,EAAE,EAAEE,MAAM,CAAC;IAC7D,OAAOT,QAAQ,CAACE,IAAI;EACxB;EAEA,MAAMW,MAAMA,CAACN,EAAU,EAAiB;IACpC,MAAMX,KAAK,CAACiB,MAAM,CAAC,GAAGhB,QAAQ,IAAIU,EAAE,EAAE,CAAC;EAC3C;EAEA,MAAMO,QAAQA,CAACP,EAAU,EAAiB;IACtC,MAAMX,KAAK,CAACmB,KAAK,CAAC,GAAGlB,QAAQ,IAAIU,EAAE,WAAW,CAAC;EACnD;EAEA,MAAMS,UAAUA,CAACT,EAAU,EAAiB;IACxC,MAAMX,KAAK,CAACmB,KAAK,CAAC,GAAGlB,QAAQ,IAAIU,EAAE,aAAa,CAAC;EACrD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}